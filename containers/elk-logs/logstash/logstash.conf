input {
    beats {
        port => 5044
        ssl => true
        ssl_certificate => "/usr/share/logstash/config/certs/logstash/logstash.crt"
        ssl_key => "/usr/share/logstash/config/certs/logstash/logstash.key"
        ssl_verify_mode => "force_peer"
        ssl_certificate_authorities => ["/usr/share/logstash/config/certs/ca/ca.crt"]
    }
}

filter {
    json {
        source => "message"
        skip_on_invalid_json => true
    }

    if ![msg] {
        drop { }
    }

    mutate {
        add_field => { "service_name" => "%{[container][name]}" }
    }

    mutate {
        gsub => [
        "service_name", "^transcendence-", "",
        "service_name", "-[0-9]+$", ""
        ]
    }

    mutate {
        add_field => { "level_text" => "%{level}" }
    }

    translate {
        field       => "level_text"
        destination => "level_text"
        dictionary  => {
            "10" => "TRACE"
            "20" => "DEBUG"
            "30" => "INFO"
            "40" => "WARN"
            "50" => "ERROR"
            "60" => "FATAL"
        }
        fallback => "UNKNOWN"
    }
}

output {
    elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "%{[container][name]}-%{+YYYY.MM.dd}"
		user => "elastic"
		password => "${ELASTIC_PASSWORD}"
		ssl => true
		ssl_verification_mode => "full"
		cacert => "/usr/share/logstash/config/certs/ca/ca.crt"
    }

    # Optional debug output
    stdout {codec => rubydebug}
}